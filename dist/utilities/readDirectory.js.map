{"version":3,"sources":["../../src/utilities/readDirectory.js"],"names":["hasIndex","directoryPath","indexPath","resolve","statSync","error","hasNoExtension","fileName","matches","match","hasMultipleExtensions","length","isSafeName","test","removeDuplicates","files","filter","includes","options","children","silent","readdirSync","absolutePath","isDirectory","startsWith","endsWith","sort"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,WAAYC,aAAD,IAAmB;AAClC,QAAMC,YAAY,eAAKC,OAAL,CAAaF,aAAb,EAA4B,UAA5B,CAAlB;;AAEA,MAAI;AACF,iBAAGG,QAAH,CAAYF,SAAZ;;AAEA,WAAO,IAAP;AACD,GAJD,CAIE,OAAOG,KAAP,EAAc;AACd,WAAO,KAAP;AACD;AACF,CAVD;;AAYA,MAAMC,iBAAkBC,QAAD,IAAc;AACnC,QAAMC,UAAUD,SAASE,KAAT,CAAe,KAAf,CAAhB;;AAEA,SAAO,CAACD,OAAR;AACD,CAJD;;AAMA,MAAME,wBAAyBH,QAAD,IAAc;AAC1C,QAAMC,UAAUD,SAASE,KAAT,CAAe,KAAf,CAAhB;;AAEA,SAAOD,WAAWA,QAAQG,MAAR,GAAiB,CAAnC;AACD,CAJD;;AAMA,MAAMC,aAAcL,QAAD,IAAc;AAC/B,SAAO,uBAAsBM,IAAtB,CAA2BN,QAA3B;AAAP;AACD,CAFD;;AAIA,MAAMO,mBAAoBC,KAAD,IAAW;AAClC,SAAO,iBAAEC,MAAF,CAASD,KAAT,EAAiBR,QAAD,IAAc;AACnC,WAAO,CAAC,iBAAEU,QAAF,CAAWF,KAAX,EAAkBR,WAAW,KAA7B,CAAR;AACD,GAFM,CAAP;AAGD,CAJD;;kBAMe,UAACN,aAAD,EAAiC;AAAA,MAAjBiB,OAAiB,uEAAP,EAAO;;AAC9C,MAAIC,QAAJ;;AAEA,MAAI,CAAC,uCAAwBlB,aAAxB,EAAuC,EAACmB,QAAQF,QAAQE,MAAjB,EAAvC,CAAL,EAAuE;AACrE,WAAO,KAAP;AACD;;AAEDD,aAAW,aAAGE,WAAH,CAAepB,aAAf,CAAX;;AAEAkB,aAAW,iBAAEH,MAAF,CAASG,QAAT,EAAoBZ,QAAD,IAAc;AAC1C,UAAMe,eAAe,eAAKnB,OAAL,CAAaF,aAAb,EAA4BM,QAA5B,CAArB;AACA,UAAMgB,cAAc,aAAGnB,QAAH,CAAYkB,YAAZ,EAA0BC,WAA1B,EAApB;;AAEA,QAAI,CAACX,WAAWL,QAAX,CAAL,EAA2B;AACzB,aAAO,KAAP;AACD;;AAED,QAAID,eAAeC,QAAf,KAA4B,CAACgB,WAAjC,EAA8C;AAC5C,aAAO,KAAP;AACD;;AAED,QAAIb,sBAAsBH,QAAtB,CAAJ,EAAqC;AACnC,aAAO,KAAP;AACD;;AAED,QAAI,iBAAEiB,UAAF,CAAajB,QAAb,EAAuB,UAAvB,CAAJ,EAAwC;AACtC,aAAO,KAAP;AACD;;AAED,QAAI,CAACgB,WAAD,KAAiB,CAAC,iBAAEE,QAAF,CAAWlB,QAAX,EAAqB,KAArB,CAAD,IAAgC,CAAC,iBAAEkB,QAAF,CAAWlB,QAAX,EAAqB,MAArB,CAAlD,CAAJ,EAAqF;AACnF,aAAO,KAAP;AACD;;AAED,QAAIgB,eAAe,CAACvB,SAASsB,YAAT,CAApB,EAA4C;AAC1C,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD,GA7BU,CAAX;;AA+BAH,aAAWL,iBAAiBK,QAAjB,CAAX;;AAEA,SAAOA,SAASO,IAAT,EAAP;AACD,C","file":"readDirectory.js","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport _ from 'lodash';\nimport validateTargetDirectory from './validateTargetDirectory';\n\nconst hasIndex = (directoryPath) => {\n  const indexPath = path.resolve(directoryPath, 'index.js');\n\n  try {\n    fs.statSync(indexPath);\n\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nconst hasNoExtension = (fileName) => {\n  const matches = fileName.match(/\\./g);\n\n  return !matches;\n};\n\nconst hasMultipleExtensions = (fileName) => {\n  const matches = fileName.match(/\\./g);\n\n  return matches && matches.length > 1;\n};\n\nconst isSafeName = (fileName) => {\n  return /^[a-z][a-z0-9._]+$/i.test(fileName);\n};\n\nconst removeDuplicates = (files) => {\n  return _.filter(files, (fileName) => {\n    return !_.includes(files, fileName + '.js');\n  });\n};\n\nexport default (directoryPath, options = {}) => {\n  let children;\n\n  if (!validateTargetDirectory(directoryPath, {silent: options.silent})) {\n    return false;\n  }\n\n  children = fs.readdirSync(directoryPath);\n\n  children = _.filter(children, (fileName) => {\n    const absolutePath = path.resolve(directoryPath, fileName);\n    const isDirectory = fs.statSync(absolutePath).isDirectory();\n\n    if (!isSafeName(fileName)) {\n      return false;\n    }\n\n    if (hasNoExtension(fileName) && !isDirectory) {\n      return false;\n    }\n\n    if (hasMultipleExtensions(fileName)) {\n      return false;\n    }\n\n    if (_.startsWith(fileName, 'index.js')) {\n      return false;\n    }\n\n    if (!isDirectory && (!_.endsWith(fileName, '.js') || !_.endsWith(fileName, '.jsx'))) {\n      return false;\n    }\n\n    if (isDirectory && !hasIndex(absolutePath)) {\n      return false;\n    }\n\n    return true;\n  });\n\n  children = removeDuplicates(children);\n\n  return children.sort();\n};\n"]}