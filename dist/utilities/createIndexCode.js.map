{"version":3,"sources":["../../src/utilities/createIndexCode.js"],"names":["safeVariableName","fileName","indexOfDot","indexOf","slice","buildExportBlock","files","importBlock","map","join","es5Imports","filePaths","options","code","banner","banners","isArray","forEach","length","sortedFilePaths","sort"],"mappings":";;;;;;AAAA;;;;;;AAEA,MAAMA,mBAAoBC,QAAD,IAAc;AACrC,QAAMC,aAAaD,SAASE,OAAT,CAAiB,GAAjB,CAAnB;;AAEA,MAAID,eAAe,CAAC,CAApB,EAAuB;AACrB,WAAOD,QAAP;AACD,GAFD,MAEO;AACL,WAAOA,SAASG,KAAT,CAAe,CAAf,EAAkBF,UAAlB,CAAP;AACD;AACF,CARD;;AAUA,MAAMG,mBAAoBC,KAAD,IAAW;AAClC,MAAIC,WAAJ;;AAEAA,gBAAc,iBAAEC,GAAF,CAAMF,KAAN,EAAcL,QAAD,IAAc;AACvC,WAAO,YAAYD,iBAAiBC,QAAjB,CAAZ,GAAyC,YAAzC,GAAwDA,QAAxD,GAAmE,KAA1E;AACD,GAFa,CAAd;;AAIAM,gBAAc,sBAAsBA,YAAYE,IAAZ,CAAiB,IAAjB,CAApC;;AAEA,MAAIC,aAAa,iBAAEF,GAAF,CAAMF,KAAN,EAAcL,QAAD,IAAc;AAC1C,WAAO,eAAeD,iBAAiBC,QAAjB,CAAf,GAA4C,qBAA5C,GAAoEA,QAApE,GAA+E,MAAtF;AACD,GAFgB,CAAjB;;AAIAS,eAAa,sBAAsBA,WAAWD,IAAX,CAAgB,IAAhB,CAAnC;;AAEA,SAAOF,cAAc,MAAd,GAAuBG,UAA9B;AACD,CAhBD;;kBAkBe,UAACC,SAAD,EAA6B;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;;AAC1C,MAAIC,IAAJ;;AAEAA,SAAO,EAAP;;AAEA,MAAID,QAAQE,MAAZ,EAAoB;AAClB,UAAMC,UAAU,iBAAEC,OAAF,CAAUJ,QAAQE,MAAlB,IAA4BF,QAAQE,MAApC,GAA6C,CAACF,QAAQE,MAAT,CAA7D;;AAEAC,YAAQE,OAAR,CAAiBH,MAAD,IAAY;AAC1BD,cAAQC,SAAS,IAAjB;AACD,KAFD;;AAIAD,YAAQ,IAAR;AACD;;AAEDA,UAAQ,sBAAR;;AAEA,MAAIF,UAAUO,MAAd,EAAsB;AACpB,UAAMC,kBAAkBR,UAAUS,IAAV,EAAxB;;AAEAP,YAAQR,iBAAiBc,eAAjB,IAAoC,MAA5C;AACD;;AAED,SAAON,IAAP;AACD,C","file":"createIndexCode.js","sourcesContent":["import _ from 'lodash';\n\nconst safeVariableName = (fileName) => {\n  const indexOfDot = fileName.indexOf('.');\n\n  if (indexOfDot === -1) {\n    return fileName;\n  } else {\n    return fileName.slice(0, indexOfDot);\n  }\n};\n\nconst buildExportBlock = (files) => {\n  let importBlock;\n\n  importBlock = _.map(files, (fileName) => {\n    return 'export ' + safeVariableName(fileName) + ' from \\'./' + fileName + '\\';';\n  });\n\n  importBlock = '//es6-imports\\n\\n' + importBlock.join('\\n');\n\n  let es5Imports = _.map(files, (fileName) => {\n    return 'exports[\\'' + safeVariableName(fileName) + '\\'] =  require(\\'./' + fileName + '\\');';\n  });\n\n  es5Imports = '//es5-imports\\n\\n' + es5Imports.join('\\n');\n\n  return importBlock + '\\n\\n' + es5Imports;\n};\n\nexport default (filePaths, options = {}) => {\n  let code;\n\n  code = '';\n\n  if (options.banner) {\n    const banners = _.isArray(options.banner) ? options.banner : [options.banner];\n\n    banners.forEach((banner) => {\n      code += banner + '\\n';\n    });\n\n    code += '\\n';\n  }\n\n  code += '// @create-index\\n\\n';\n\n  if (filePaths.length) {\n    const sortedFilePaths = filePaths.sort();\n\n    code += buildExportBlock(sortedFilePaths) + '\\n\\n';\n  }\n\n  return code;\n};\n"]}